{
	"name": "create_bronze_tables",
	"properties": {
		"folder": {
			"name": "nyc_taxi/ldw"
		},
		"content": {
			"query": "use nyc_taxi_ldw;\n\nIF OBJECT_ID('bronze.taxi_zone') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.taxi_zone\n\nCREATE EXTERNAL TABLE bronze.taxi_zone\n    (\n        location_id  SMALLINT ,\n        borough VARCHAR(15) ,\n        zone VARCHAR(50) ,\n        service_zone VARCHAR(15)  \n    )\n    WITH (\n        LOCATION = 'taxi_zone.csv',\n        DATA_SOURCE = nyc_taxi_src,\n        FILE_FORMAT = csv_file_format,\n        REJECT_VALUE=10,\n        REJECTED_ROW_LOCATION='rejections/taxi_zone'\n    );\n\nIF OBJECT_ID('bronze.calendar') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.calendar\n\nCREATE EXTERNAL TABLE bronze.calendar\n    (\n        date_key INT ,\n        date DATE ,\n        year INT ,\n        month SMALLINT ,\n        day SMALLINT ,\n        day_name VARCHAR(20) ,\n        day_of_year SMALLINT ,\n        week_of_month SMALLINT ,\n        week_of_year SMALLINT ,\n        month_name VARCHAR(20) ,\n        year_month INT ,\n        year_weak INT       \n    )\n    WITH (\n        LOCATION = 'calendar.csv',\n        DATA_SOURCE = nyc_taxi_src,\n        FILE_FORMAT = csv_file_format,\n        REJECT_VALUE=10,\n        REJECTED_ROW_LOCATION='rejections/calendar'\n    );\n\nIF OBJECT_ID('bronze.vendor') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.vendor\n\nCREATE EXTERNAL TABLE bronze.vendor\n    (\n        vendor_id SMALLINT,\n        vendor_name varchar(100)\n    )\n    WITH \n        (\n            LOCATION = 'vendor.csv',\n            DATA_SOURCE = nyc_taxi_src,\n            FILE_FORMAT = csv_file_format_pv1,\n            REJECT_VALUE=1,\n            REJECTED_ROW_LOCATION='rejections/vendor'\n    );\n\nselect * from bronze.vendor;\n\n\nselect * from bronze.taxi_zone;\nSELECT * FROM bronze.calendar;\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nyc_taxi_ldw",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}